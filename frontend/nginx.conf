# ===================================================
# HTTP -> HTTPS Redirect
# ===================================================
server {
    listen 80;
    listen [::]:80;
    server_name ryanhideosmtp.com www.ryanhideosmtp.com;

    return 301 https://$host$request_uri;
}

# ===================================================
# HTTPS React App Server
# ===================================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ryanhideosmtp.com www.ryanhideosmtp.com;

    # SSL Certificates (update with your certs from Let's Encrypt)
    ssl_certificate     /etc/letsencrypt/live/ryanhideosmtp.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ryanhideosmtp.com/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    # Root directory for React build output
    root /home/ubuntu/frontend/dist;
    index index.html;

    # Gzip compression for performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml application/xml application/json application/javascript text/javascript;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Cache static assets aggressively
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|ttf|svg|eot)$ {
        expires 1y;
        access_log off;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Main SPA route handler â€” this is critical for /confirm and /reset
    location / {
        try_files $uri $uri/ /index.html;
    }

}
